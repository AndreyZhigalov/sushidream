{"version":3,"file":"static/js/Menu.2cf31705.chunk.js","mappings":"6LA6BA,EAtBsB,WACpB,OAAoCA,EAAAA,EAAAA,UAAsB,CACxDC,WAAOC,EACPC,YAAQD,IAFV,eAAOE,EAAP,KAAmBC,EAAnB,KAkBA,OAbAC,EAAAA,EAAAA,YAAU,WACR,GAAsB,qBAAXC,OAAwB,CACjC,IAAMC,EAAe,WACnBH,EAAc,CACZJ,MAAOM,OAAOE,WACdN,OAAQI,OAAOG,eAKnB,OAFAH,OAAOI,iBAAiB,SAAUH,GAClCA,IACO,kBAAMD,OAAOK,oBAAoB,SAAUJ,OAEnD,IACIJ,G,8GC6BT,EA1CuB,WACrB,IAAMA,EAAaS,IACnB,GAAwCC,EAAAA,EAAAA,GAAeC,EAAAA,IAA/CC,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,WACzB,GAA4BH,EAAAA,EAAAA,GAAeI,EAAAA,IAAnCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,OAEjBC,EAAAA,WAAgB,WACdd,OAAOe,SAAS,EAAG,KAClB,IAmBH,OACE,iCACE,gBAAKC,UAAWC,EAAAA,EAAAA,cAAhB,SACc,UAAXJ,IAAsB,gBAAKG,UAAWC,EAAAA,EAAAA,WAAmBC,IApB9C,WAChB,IAAMC,EAASP,EAAQF,EAAWU,QAAQX,IAC1C,GAAII,IAAWQ,EAAAA,GAAAA,QACb,OAAOC,EAEP,GAAIzB,EAAWH,MAAO,CACpB,GAAIG,EAAWH,MAAQ,IACrB,OAAOyB,EAAO,MAAUA,EAAO,MAAUG,EACpC,GAAIzB,EAAWH,MAAQ,IAC5B,OAAOyB,EAAO,KAASA,EAAO,KAASG,EAClC,GAAIzB,EAAWH,OAAS,IAC7B,OAAOyB,EAAO,KAASA,EAAO,KAASG,GASsBC,GAAaC,IAAI,cAElF,iBAAKR,UAAWC,EAAAA,EAAAA,YAAhB,WACE,SAAC,KAAD,CAAYQ,SAAU,CAAC,GAAI,MAC3B,SAAC,KAAD,KACA,SAAC,KAAD,MACC5B,EAAWH,QAAQG,EAAWH,MAAQ,MAAO,SAAC,KAAD,OAC7CG,EAAWH,QAAQG,EAAWH,MAAQ,MAAO,SAAC,KAAD","sources":["Hooks/useScreenSize.ts","pages/Menu.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\ntype ScreenProps = {\r\n  width: number | undefined;\r\n  height: number | undefined;\r\n};\r\n\r\nconst useScreenSize = () => {\r\n  const [screenSize, setScreenSize] = useState<ScreenProps>({\r\n    width: undefined,\r\n    height: undefined,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (typeof window !== 'undefined') {\r\n      const handleResize = () => {\r\n        setScreenSize({\r\n          width: window.innerWidth,\r\n          height: window.innerHeight,\r\n        });\r\n      };\r\n      window.addEventListener('resize', handleResize);\r\n      handleResize();\r\n      return () => window.removeEventListener('resize', handleResize);\r\n    }\r\n  }, []);\r\n  return screenSize;\r\n};\r\n\r\nexport default useScreenSize;\r\n","import React from 'react';\r\nimport { useAppSelector } from '../Hooks/hooks';\r\nimport useScreenSize from '../Hooks/useScreenSize';\r\n\r\nimport { AccortmentBlock, Navigation, Check, Sort, DeliveryRegion } from '../componenst';\r\n\r\nimport { selectFilters } from '../redux/slices/filtersSlice';\r\nimport { selectAssortment, Status } from '../redux/slices/assortmentSlice';\r\n\r\nimport bannerLoader from '../assets/banner_loader.webp';\r\n\r\nimport styles from '../scss/index.module.scss';\r\n\r\nconst Menu: React.FC = () => {\r\n  const screenSize = useScreenSize();\r\n  const { currentCategory, categories } = useAppSelector(selectFilters);\r\n  const { banners, status } = useAppSelector(selectAssortment);\r\n\r\n  React.useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  const setBanner = () => {\r\n    const banner = banners[categories.indexOf(currentCategory)];\r\n    if (status === Status.LOADING) {\r\n      return bannerLoader;\r\n    } else {\r\n      if (screenSize.width) {\r\n        if (screenSize.width > 820) {\r\n          return banner['1600'] ? banner['1600'] : bannerLoader;\r\n        } else if (screenSize.width > 420) {\r\n          return banner['820'] ? banner['820'] : bannerLoader;\r\n        } else if (screenSize.width <= 420) {\r\n          return banner['420'] ? banner['420'] : bannerLoader;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.bannerWrapper}>\r\n        {status !== 'error' && <img className={styles.menuBanner} src={setBanner()} alt=\"banner\" />}\r\n      </div>\r\n      <div className={styles.menuWrapper}>\r\n        <Navigation navRange={[0, -2]} />\r\n        <Sort />\r\n        <AccortmentBlock />\r\n        {screenSize.width ? screenSize.width > 820 && <DeliveryRegion /> : false}\r\n        {screenSize.width ? screenSize.width > 820 && <Check /> : false}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n"],"names":["useState","width","undefined","height","screenSize","setScreenSize","useEffect","window","handleResize","innerWidth","innerHeight","addEventListener","removeEventListener","useScreenSize","useAppSelector","selectFilters","currentCategory","categories","selectAssortment","banners","status","React","scrollTo","className","styles","src","banner","indexOf","Status","bannerLoader","setBanner","alt","navRange"],"sourceRoot":""}